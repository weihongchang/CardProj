// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.core.Message.Model {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Message {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_CSLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.CSLogin, global::com.core.Message.Model.CSLogin.Builder> internal__static_com_core_Message_Model_CSLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_SCLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCLogin, global::com.core.Message.Model.SCLogin.Builder> internal__static_com_core_Message_Model_SCLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_CSRegister__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.CSRegister, global::com.core.Message.Model.CSRegister.Builder> internal__static_com_core_Message_Model_CSRegister__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_SCRegister__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCRegister, global::com.core.Message.Model.SCRegister.Builder> internal__static_com_core_Message_Model_SCRegister__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_SCServerList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCServerList, global::com.core.Message.Model.SCServerList.Builder> internal__static_com_core_Message_Model_SCServerList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_CSMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.CSMsg, global::com.core.Message.Model.CSMsg.Builder> internal__static_com_core_Message_Model_CSMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_core_Message_Model_SCMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCMsg, global::com.core.Message.Model.SCMsg.Builder> internal__static_com_core_Message_Model_SCMsg__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Message() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg1tZXNzYWdlLnByb3RvEhZjb20uY29yZS5NZXNzYWdlLk1vZGVsGgplbnVt" + 
          "LnByb3RvGgxzdHJ1Y3QucHJvdG8iXAoHQ1NMb2dpbhIVCg1sb2dpblVzZXJO" + 
          "YW1lGAEgAigJEhUKDWxvZ2luUGFzc1dvcmQYAiABKAkSEgoKc2Vzc2lvbktl" + 
          "eRgDIAEoCRIPCgd3b3JsZGlkGAQgASgFIh4KB1NDTG9naW4SEwoLbG9naW5T" + 
          "dGF0dXMYASACKAUiQAoKQ1NSZWdpc3RlchIYChByZWdpc3RlclVzZXJOYW1l" + 
          "GAEgAigJEhgKEHJlZ2lzdGVyUGFzc3dvcmQYAiACKAkiHAoKU0NSZWdpc3Rl" + 
          "chIOCgZzdGF0dXMYASACKAUiXQoMU0NTZXJ2ZXJMaXN0EhAKCHNlcnZlcklk" + 
          "GAEgAigFEhIKCnNlcnZlck5hbWUYAiACKAkSFAoMc2VydmVyU3RhdHVzGAMg" + 
          "AigFEhEKCXNlcnZlckRlcxgEIAIoCSJQCgVDU01zZxIQCgh1c2VybmFtZRgB" + 
          "IAIoCRIQCghwYXNzd29yZBgCIAEoCRISCgpzZXNzaW9uS2V5GAMgASgJEg8K" + 
          "B3dvcmxkaWQYBCABKAUiGQoFU0NNc2cSEAoIdXNlcm5hbWUYASACKAlCCUIH" + 
          "TWVzc2FnZQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_core_Message_Model_CSLogin__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_core_Message_Model_CSLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.CSLogin, global::com.core.Message.Model.CSLogin.Builder>(internal__static_com_core_Message_Model_CSLogin__Descriptor,
                new string[] { "LoginUserName", "LoginPassWord", "SessionKey", "Worldid", });
        internal__static_com_core_Message_Model_SCLogin__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_core_Message_Model_SCLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCLogin, global::com.core.Message.Model.SCLogin.Builder>(internal__static_com_core_Message_Model_SCLogin__Descriptor,
                new string[] { "LoginStatus", });
        internal__static_com_core_Message_Model_CSRegister__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_core_Message_Model_CSRegister__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.CSRegister, global::com.core.Message.Model.CSRegister.Builder>(internal__static_com_core_Message_Model_CSRegister__Descriptor,
                new string[] { "RegisterUserName", "RegisterPassword", });
        internal__static_com_core_Message_Model_SCRegister__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_core_Message_Model_SCRegister__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCRegister, global::com.core.Message.Model.SCRegister.Builder>(internal__static_com_core_Message_Model_SCRegister__Descriptor,
                new string[] { "Status", });
        internal__static_com_core_Message_Model_SCServerList__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_core_Message_Model_SCServerList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCServerList, global::com.core.Message.Model.SCServerList.Builder>(internal__static_com_core_Message_Model_SCServerList__Descriptor,
                new string[] { "ServerId", "ServerName", "ServerStatus", "ServerDes", });
        internal__static_com_core_Message_Model_CSMsg__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_core_Message_Model_CSMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.CSMsg, global::com.core.Message.Model.CSMsg.Builder>(internal__static_com_core_Message_Model_CSMsg__Descriptor,
                new string[] { "Username", "Password", "SessionKey", "Worldid", });
        internal__static_com_core_Message_Model_SCMsg__Descriptor = Descriptor.MessageTypes[6];
        internal__static_com_core_Message_Model_SCMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.core.Message.Model.SCMsg, global::com.core.Message.Model.SCMsg.Builder>(internal__static_com_core_Message_Model_SCMsg__Descriptor,
                new string[] { "Username", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::com.core.Message.Model.Enum.Descriptor, 
          global::com.core.Message.Model.Struct.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CSLogin : pb::GeneratedMessage<CSLogin, CSLogin.Builder> {
    private CSLogin() { }
    private static readonly CSLogin defaultInstance = new CSLogin().MakeReadOnly();
    private static readonly string[] _cSLoginFieldNames = new string[] { "loginPassWord", "loginUserName", "sessionKey", "worldid" };
    private static readonly uint[] _cSLoginFieldTags = new uint[] { 18, 10, 26, 32 };
    public static CSLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CSLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CSLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_CSLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CSLogin, CSLogin.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_CSLogin__FieldAccessorTable; }
    }
    
    public const int LoginUserNameFieldNumber = 1;
    private bool hasLoginUserName;
    private string loginUserName_ = "";
    public bool HasLoginUserName {
      get { return hasLoginUserName; }
    }
    public string LoginUserName {
      get { return loginUserName_; }
    }
    
    public const int LoginPassWordFieldNumber = 2;
    private bool hasLoginPassWord;
    private string loginPassWord_ = "";
    public bool HasLoginPassWord {
      get { return hasLoginPassWord; }
    }
    public string LoginPassWord {
      get { return loginPassWord_; }
    }
    
    public const int SessionKeyFieldNumber = 3;
    private bool hasSessionKey;
    private string sessionKey_ = "";
    public bool HasSessionKey {
      get { return hasSessionKey; }
    }
    public string SessionKey {
      get { return sessionKey_; }
    }
    
    public const int WorldidFieldNumber = 4;
    private bool hasWorldid;
    private int worldid_;
    public bool HasWorldid {
      get { return hasWorldid; }
    }
    public int Worldid {
      get { return worldid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLoginUserName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cSLoginFieldNames;
      if (hasLoginUserName) {
        output.WriteString(1, field_names[1], LoginUserName);
      }
      if (hasLoginPassWord) {
        output.WriteString(2, field_names[0], LoginPassWord);
      }
      if (hasSessionKey) {
        output.WriteString(3, field_names[2], SessionKey);
      }
      if (hasWorldid) {
        output.WriteInt32(4, field_names[3], Worldid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLoginUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, LoginUserName);
        }
        if (hasLoginPassWord) {
          size += pb::CodedOutputStream.ComputeStringSize(2, LoginPassWord);
        }
        if (hasSessionKey) {
          size += pb::CodedOutputStream.ComputeStringSize(3, SessionKey);
        }
        if (hasWorldid) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Worldid);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CSLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CSLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CSLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CSLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CSLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CSLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CSLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CSLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CSLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CSLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CSLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CSLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CSLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CSLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CSLogin result;
      
      private CSLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          CSLogin original = result;
          result = new CSLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CSLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.CSLogin.Descriptor; }
      }
      
      public override CSLogin DefaultInstanceForType {
        get { return global::com.core.Message.Model.CSLogin.DefaultInstance; }
      }
      
      public override CSLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CSLogin) {
          return MergeFrom((CSLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CSLogin other) {
        if (other == global::com.core.Message.Model.CSLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginUserName) {
          LoginUserName = other.LoginUserName;
        }
        if (other.HasLoginPassWord) {
          LoginPassWord = other.LoginPassWord;
        }
        if (other.HasSessionKey) {
          SessionKey = other.SessionKey;
        }
        if (other.HasWorldid) {
          Worldid = other.Worldid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cSLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cSLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginUserName = input.ReadString(ref result.loginUserName_);
              break;
            }
            case 18: {
              result.hasLoginPassWord = input.ReadString(ref result.loginPassWord_);
              break;
            }
            case 26: {
              result.hasSessionKey = input.ReadString(ref result.sessionKey_);
              break;
            }
            case 32: {
              result.hasWorldid = input.ReadInt32(ref result.worldid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginUserName {
        get { return result.hasLoginUserName; }
      }
      public string LoginUserName {
        get { return result.LoginUserName; }
        set { SetLoginUserName(value); }
      }
      public Builder SetLoginUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginUserName = true;
        result.loginUserName_ = value;
        return this;
      }
      public Builder ClearLoginUserName() {
        PrepareBuilder();
        result.hasLoginUserName = false;
        result.loginUserName_ = "";
        return this;
      }
      
      public bool HasLoginPassWord {
        get { return result.hasLoginPassWord; }
      }
      public string LoginPassWord {
        get { return result.LoginPassWord; }
        set { SetLoginPassWord(value); }
      }
      public Builder SetLoginPassWord(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginPassWord = true;
        result.loginPassWord_ = value;
        return this;
      }
      public Builder ClearLoginPassWord() {
        PrepareBuilder();
        result.hasLoginPassWord = false;
        result.loginPassWord_ = "";
        return this;
      }
      
      public bool HasSessionKey {
        get { return result.hasSessionKey; }
      }
      public string SessionKey {
        get { return result.SessionKey; }
        set { SetSessionKey(value); }
      }
      public Builder SetSessionKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionKey = true;
        result.sessionKey_ = value;
        return this;
      }
      public Builder ClearSessionKey() {
        PrepareBuilder();
        result.hasSessionKey = false;
        result.sessionKey_ = "";
        return this;
      }
      
      public bool HasWorldid {
        get { return result.hasWorldid; }
      }
      public int Worldid {
        get { return result.Worldid; }
        set { SetWorldid(value); }
      }
      public Builder SetWorldid(int value) {
        PrepareBuilder();
        result.hasWorldid = true;
        result.worldid_ = value;
        return this;
      }
      public Builder ClearWorldid() {
        PrepareBuilder();
        result.hasWorldid = false;
        result.worldid_ = 0;
        return this;
      }
    }
    static CSLogin() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SCLogin : pb::GeneratedMessage<SCLogin, SCLogin.Builder> {
    private SCLogin() { }
    private static readonly SCLogin defaultInstance = new SCLogin().MakeReadOnly();
    private static readonly string[] _sCLoginFieldNames = new string[] { "loginStatus" };
    private static readonly uint[] _sCLoginFieldTags = new uint[] { 8 };
    public static SCLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SCLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SCLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SCLogin, SCLogin.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCLogin__FieldAccessorTable; }
    }
    
    public const int LoginStatusFieldNumber = 1;
    private bool hasLoginStatus;
    private int loginStatus_;
    public bool HasLoginStatus {
      get { return hasLoginStatus; }
    }
    public int LoginStatus {
      get { return loginStatus_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLoginStatus) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sCLoginFieldNames;
      if (hasLoginStatus) {
        output.WriteInt32(1, field_names[0], LoginStatus);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLoginStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, LoginStatus);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SCLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SCLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SCLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SCLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SCLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SCLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SCLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SCLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SCLogin result;
      
      private SCLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          SCLogin original = result;
          result = new SCLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SCLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.SCLogin.Descriptor; }
      }
      
      public override SCLogin DefaultInstanceForType {
        get { return global::com.core.Message.Model.SCLogin.DefaultInstance; }
      }
      
      public override SCLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SCLogin) {
          return MergeFrom((SCLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SCLogin other) {
        if (other == global::com.core.Message.Model.SCLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginStatus) {
          LoginStatus = other.LoginStatus;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sCLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sCLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLoginStatus = input.ReadInt32(ref result.loginStatus_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginStatus {
        get { return result.hasLoginStatus; }
      }
      public int LoginStatus {
        get { return result.LoginStatus; }
        set { SetLoginStatus(value); }
      }
      public Builder SetLoginStatus(int value) {
        PrepareBuilder();
        result.hasLoginStatus = true;
        result.loginStatus_ = value;
        return this;
      }
      public Builder ClearLoginStatus() {
        PrepareBuilder();
        result.hasLoginStatus = false;
        result.loginStatus_ = 0;
        return this;
      }
    }
    static SCLogin() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CSRegister : pb::GeneratedMessage<CSRegister, CSRegister.Builder> {
    private CSRegister() { }
    private static readonly CSRegister defaultInstance = new CSRegister().MakeReadOnly();
    private static readonly string[] _cSRegisterFieldNames = new string[] { "registerPassword", "registerUserName" };
    private static readonly uint[] _cSRegisterFieldTags = new uint[] { 18, 10 };
    public static CSRegister DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CSRegister DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CSRegister ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_CSRegister__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CSRegister, CSRegister.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_CSRegister__FieldAccessorTable; }
    }
    
    public const int RegisterUserNameFieldNumber = 1;
    private bool hasRegisterUserName;
    private string registerUserName_ = "";
    public bool HasRegisterUserName {
      get { return hasRegisterUserName; }
    }
    public string RegisterUserName {
      get { return registerUserName_; }
    }
    
    public const int RegisterPasswordFieldNumber = 2;
    private bool hasRegisterPassword;
    private string registerPassword_ = "";
    public bool HasRegisterPassword {
      get { return hasRegisterPassword; }
    }
    public string RegisterPassword {
      get { return registerPassword_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRegisterUserName) return false;
        if (!hasRegisterPassword) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cSRegisterFieldNames;
      if (hasRegisterUserName) {
        output.WriteString(1, field_names[1], RegisterUserName);
      }
      if (hasRegisterPassword) {
        output.WriteString(2, field_names[0], RegisterPassword);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRegisterUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, RegisterUserName);
        }
        if (hasRegisterPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RegisterPassword);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CSRegister ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CSRegister ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CSRegister ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CSRegister ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CSRegister ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CSRegister ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CSRegister ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CSRegister ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CSRegister ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CSRegister ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CSRegister MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CSRegister prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CSRegister, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CSRegister cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CSRegister result;
      
      private CSRegister PrepareBuilder() {
        if (resultIsReadOnly) {
          CSRegister original = result;
          result = new CSRegister();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CSRegister MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.CSRegister.Descriptor; }
      }
      
      public override CSRegister DefaultInstanceForType {
        get { return global::com.core.Message.Model.CSRegister.DefaultInstance; }
      }
      
      public override CSRegister BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CSRegister) {
          return MergeFrom((CSRegister) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CSRegister other) {
        if (other == global::com.core.Message.Model.CSRegister.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRegisterUserName) {
          RegisterUserName = other.RegisterUserName;
        }
        if (other.HasRegisterPassword) {
          RegisterPassword = other.RegisterPassword;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cSRegisterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cSRegisterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRegisterUserName = input.ReadString(ref result.registerUserName_);
              break;
            }
            case 18: {
              result.hasRegisterPassword = input.ReadString(ref result.registerPassword_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRegisterUserName {
        get { return result.hasRegisterUserName; }
      }
      public string RegisterUserName {
        get { return result.RegisterUserName; }
        set { SetRegisterUserName(value); }
      }
      public Builder SetRegisterUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRegisterUserName = true;
        result.registerUserName_ = value;
        return this;
      }
      public Builder ClearRegisterUserName() {
        PrepareBuilder();
        result.hasRegisterUserName = false;
        result.registerUserName_ = "";
        return this;
      }
      
      public bool HasRegisterPassword {
        get { return result.hasRegisterPassword; }
      }
      public string RegisterPassword {
        get { return result.RegisterPassword; }
        set { SetRegisterPassword(value); }
      }
      public Builder SetRegisterPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRegisterPassword = true;
        result.registerPassword_ = value;
        return this;
      }
      public Builder ClearRegisterPassword() {
        PrepareBuilder();
        result.hasRegisterPassword = false;
        result.registerPassword_ = "";
        return this;
      }
    }
    static CSRegister() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SCRegister : pb::GeneratedMessage<SCRegister, SCRegister.Builder> {
    private SCRegister() { }
    private static readonly SCRegister defaultInstance = new SCRegister().MakeReadOnly();
    private static readonly string[] _sCRegisterFieldNames = new string[] { "status" };
    private static readonly uint[] _sCRegisterFieldTags = new uint[] { 8 };
    public static SCRegister DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SCRegister DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SCRegister ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCRegister__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SCRegister, SCRegister.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCRegister__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatus) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sCRegisterFieldNames;
      if (hasStatus) {
        output.WriteInt32(1, field_names[0], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SCRegister ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCRegister ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCRegister ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCRegister ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCRegister ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCRegister ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SCRegister ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SCRegister ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SCRegister ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCRegister ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SCRegister MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SCRegister prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SCRegister, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SCRegister cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SCRegister result;
      
      private SCRegister PrepareBuilder() {
        if (resultIsReadOnly) {
          SCRegister original = result;
          result = new SCRegister();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SCRegister MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.SCRegister.Descriptor; }
      }
      
      public override SCRegister DefaultInstanceForType {
        get { return global::com.core.Message.Model.SCRegister.DefaultInstance; }
      }
      
      public override SCRegister BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SCRegister) {
          return MergeFrom((SCRegister) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SCRegister other) {
        if (other == global::com.core.Message.Model.SCRegister.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sCRegisterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sCRegisterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static SCRegister() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SCServerList : pb::GeneratedMessage<SCServerList, SCServerList.Builder> {
    private SCServerList() { }
    private static readonly SCServerList defaultInstance = new SCServerList().MakeReadOnly();
    private static readonly string[] _sCServerListFieldNames = new string[] { "serverDes", "serverId", "serverName", "serverStatus" };
    private static readonly uint[] _sCServerListFieldTags = new uint[] { 34, 8, 18, 24 };
    public static SCServerList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SCServerList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SCServerList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCServerList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SCServerList, SCServerList.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCServerList__FieldAccessorTable; }
    }
    
    public const int ServerIdFieldNumber = 1;
    private bool hasServerId;
    private int serverId_;
    public bool HasServerId {
      get { return hasServerId; }
    }
    public int ServerId {
      get { return serverId_; }
    }
    
    public const int ServerNameFieldNumber = 2;
    private bool hasServerName;
    private string serverName_ = "";
    public bool HasServerName {
      get { return hasServerName; }
    }
    public string ServerName {
      get { return serverName_; }
    }
    
    public const int ServerStatusFieldNumber = 3;
    private bool hasServerStatus;
    private int serverStatus_;
    public bool HasServerStatus {
      get { return hasServerStatus; }
    }
    public int ServerStatus {
      get { return serverStatus_; }
    }
    
    public const int ServerDesFieldNumber = 4;
    private bool hasServerDes;
    private string serverDes_ = "";
    public bool HasServerDes {
      get { return hasServerDes; }
    }
    public string ServerDes {
      get { return serverDes_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasServerId) return false;
        if (!hasServerName) return false;
        if (!hasServerStatus) return false;
        if (!hasServerDes) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sCServerListFieldNames;
      if (hasServerId) {
        output.WriteInt32(1, field_names[1], ServerId);
      }
      if (hasServerName) {
        output.WriteString(2, field_names[2], ServerName);
      }
      if (hasServerStatus) {
        output.WriteInt32(3, field_names[3], ServerStatus);
      }
      if (hasServerDes) {
        output.WriteString(4, field_names[0], ServerDes);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasServerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ServerId);
        }
        if (hasServerName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ServerName);
        }
        if (hasServerStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ServerStatus);
        }
        if (hasServerDes) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ServerDes);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SCServerList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCServerList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCServerList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCServerList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCServerList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCServerList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SCServerList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SCServerList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SCServerList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCServerList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SCServerList MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SCServerList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SCServerList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SCServerList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SCServerList result;
      
      private SCServerList PrepareBuilder() {
        if (resultIsReadOnly) {
          SCServerList original = result;
          result = new SCServerList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SCServerList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.SCServerList.Descriptor; }
      }
      
      public override SCServerList DefaultInstanceForType {
        get { return global::com.core.Message.Model.SCServerList.DefaultInstance; }
      }
      
      public override SCServerList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SCServerList) {
          return MergeFrom((SCServerList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SCServerList other) {
        if (other == global::com.core.Message.Model.SCServerList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasServerId) {
          ServerId = other.ServerId;
        }
        if (other.HasServerName) {
          ServerName = other.ServerName;
        }
        if (other.HasServerStatus) {
          ServerStatus = other.ServerStatus;
        }
        if (other.HasServerDes) {
          ServerDes = other.ServerDes;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sCServerListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sCServerListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasServerId = input.ReadInt32(ref result.serverId_);
              break;
            }
            case 18: {
              result.hasServerName = input.ReadString(ref result.serverName_);
              break;
            }
            case 24: {
              result.hasServerStatus = input.ReadInt32(ref result.serverStatus_);
              break;
            }
            case 34: {
              result.hasServerDes = input.ReadString(ref result.serverDes_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasServerId {
        get { return result.hasServerId; }
      }
      public int ServerId {
        get { return result.ServerId; }
        set { SetServerId(value); }
      }
      public Builder SetServerId(int value) {
        PrepareBuilder();
        result.hasServerId = true;
        result.serverId_ = value;
        return this;
      }
      public Builder ClearServerId() {
        PrepareBuilder();
        result.hasServerId = false;
        result.serverId_ = 0;
        return this;
      }
      
      public bool HasServerName {
        get { return result.hasServerName; }
      }
      public string ServerName {
        get { return result.ServerName; }
        set { SetServerName(value); }
      }
      public Builder SetServerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasServerName = true;
        result.serverName_ = value;
        return this;
      }
      public Builder ClearServerName() {
        PrepareBuilder();
        result.hasServerName = false;
        result.serverName_ = "";
        return this;
      }
      
      public bool HasServerStatus {
        get { return result.hasServerStatus; }
      }
      public int ServerStatus {
        get { return result.ServerStatus; }
        set { SetServerStatus(value); }
      }
      public Builder SetServerStatus(int value) {
        PrepareBuilder();
        result.hasServerStatus = true;
        result.serverStatus_ = value;
        return this;
      }
      public Builder ClearServerStatus() {
        PrepareBuilder();
        result.hasServerStatus = false;
        result.serverStatus_ = 0;
        return this;
      }
      
      public bool HasServerDes {
        get { return result.hasServerDes; }
      }
      public string ServerDes {
        get { return result.ServerDes; }
        set { SetServerDes(value); }
      }
      public Builder SetServerDes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasServerDes = true;
        result.serverDes_ = value;
        return this;
      }
      public Builder ClearServerDes() {
        PrepareBuilder();
        result.hasServerDes = false;
        result.serverDes_ = "";
        return this;
      }
    }
    static SCServerList() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CSMsg : pb::GeneratedMessage<CSMsg, CSMsg.Builder> {
    private CSMsg() { }
    private static readonly CSMsg defaultInstance = new CSMsg().MakeReadOnly();
    private static readonly string[] _cSMsgFieldNames = new string[] { "password", "sessionKey", "username", "worldid" };
    private static readonly uint[] _cSMsgFieldTags = new uint[] { 18, 26, 10, 32 };
    public static CSMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CSMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CSMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_CSMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CSMsg, CSMsg.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_CSMsg__FieldAccessorTable; }
    }
    
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int SessionKeyFieldNumber = 3;
    private bool hasSessionKey;
    private string sessionKey_ = "";
    public bool HasSessionKey {
      get { return hasSessionKey; }
    }
    public string SessionKey {
      get { return sessionKey_; }
    }
    
    public const int WorldidFieldNumber = 4;
    private bool hasWorldid;
    private int worldid_;
    public bool HasWorldid {
      get { return hasWorldid; }
    }
    public int Worldid {
      get { return worldid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUsername) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cSMsgFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[2], Username);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[0], Password);
      }
      if (hasSessionKey) {
        output.WriteString(3, field_names[1], SessionKey);
      }
      if (hasWorldid) {
        output.WriteInt32(4, field_names[3], Worldid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Username);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password);
        }
        if (hasSessionKey) {
          size += pb::CodedOutputStream.ComputeStringSize(3, SessionKey);
        }
        if (hasWorldid) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Worldid);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CSMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CSMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CSMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CSMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CSMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CSMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CSMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CSMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CSMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CSMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CSMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CSMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CSMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CSMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CSMsg result;
      
      private CSMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          CSMsg original = result;
          result = new CSMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CSMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.CSMsg.Descriptor; }
      }
      
      public override CSMsg DefaultInstanceForType {
        get { return global::com.core.Message.Model.CSMsg.DefaultInstance; }
      }
      
      public override CSMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CSMsg) {
          return MergeFrom((CSMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CSMsg other) {
        if (other == global::com.core.Message.Model.CSMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasSessionKey) {
          SessionKey = other.SessionKey;
        }
        if (other.HasWorldid) {
          Worldid = other.Worldid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cSMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cSMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 26: {
              result.hasSessionKey = input.ReadString(ref result.sessionKey_);
              break;
            }
            case 32: {
              result.hasWorldid = input.ReadInt32(ref result.worldid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasSessionKey {
        get { return result.hasSessionKey; }
      }
      public string SessionKey {
        get { return result.SessionKey; }
        set { SetSessionKey(value); }
      }
      public Builder SetSessionKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionKey = true;
        result.sessionKey_ = value;
        return this;
      }
      public Builder ClearSessionKey() {
        PrepareBuilder();
        result.hasSessionKey = false;
        result.sessionKey_ = "";
        return this;
      }
      
      public bool HasWorldid {
        get { return result.hasWorldid; }
      }
      public int Worldid {
        get { return result.Worldid; }
        set { SetWorldid(value); }
      }
      public Builder SetWorldid(int value) {
        PrepareBuilder();
        result.hasWorldid = true;
        result.worldid_ = value;
        return this;
      }
      public Builder ClearWorldid() {
        PrepareBuilder();
        result.hasWorldid = false;
        result.worldid_ = 0;
        return this;
      }
    }
    static CSMsg() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SCMsg : pb::GeneratedMessage<SCMsg, SCMsg.Builder> {
    private SCMsg() { }
    private static readonly SCMsg defaultInstance = new SCMsg().MakeReadOnly();
    private static readonly string[] _sCMsgFieldNames = new string[] { "username" };
    private static readonly uint[] _sCMsgFieldTags = new uint[] { 10 };
    public static SCMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SCMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SCMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SCMsg, SCMsg.Builder> InternalFieldAccessors {
      get { return global::com.core.Message.Model.Message.internal__static_com_core_Message_Model_SCMsg__FieldAccessorTable; }
    }
    
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUsername) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sCMsgFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[0], Username);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Username);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SCMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SCMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SCMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SCMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SCMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SCMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SCMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SCMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SCMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SCMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SCMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SCMsg result;
      
      private SCMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          SCMsg original = result;
          result = new SCMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SCMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.core.Message.Model.SCMsg.Descriptor; }
      }
      
      public override SCMsg DefaultInstanceForType {
        get { return global::com.core.Message.Model.SCMsg.DefaultInstance; }
      }
      
      public override SCMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SCMsg) {
          return MergeFrom((SCMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SCMsg other) {
        if (other == global::com.core.Message.Model.SCMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sCMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sCMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
    }
    static SCMsg() {
      object.ReferenceEquals(global::com.core.Message.Model.Message.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
